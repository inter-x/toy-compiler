这玩意PL0改的，语法错了，草，不是我的问题
就不能复合语句套复合语句
出这作业的老师傻逼
1. 编译算法实现
• Mission: 掌握编译器构造的经典算法
• Task:
请选择⼀种⾼级程序设计语⾔，选择课内学习的⼀种词法分析器构造算法、语法分析器构造算法
和中间代码⽣成算法实现⼀个⼩语⾔PL/0的简单编译器(Compiler)。
a. 要求编译器的输⼊为符合PL/0语⾔源程序，输出为中间代码（三地址代码）表⽰的程序；
b. 要求编译器是个⼀遍的编译程序，词法分析程序作为⼦程序，需要的时候被语法分析程序调
⽤；
c. 要求使⽤语法制导的翻译技术，在语法分析的同时⽣成中间代码，并保存到⽂件中。
• Candidate Algorithms:
a. 词法分析：Thompson算法、⼦集法、等价状态法等
b. 语法分析：递归下降分析法、预测分析程序、LR分析法等
c. 中间代码⽣成：属性⽂法、翻译⼦程序等
• PL/0语⾔的语法规则:
a. 词法规则
关键字：PROGRAM、BEGIN、END、CONST、VAR、WHILE、DO、IF、THEN。
标识符：以字⺟开头的、由字⺟和数字组成的字符串。
整数：数字开头的数字串。
算符、界符：+、-、*、/、:=、=、<>、>、>=、<、<=、（、）、；、，
b. 语法规则
<程序>→<程序⾸部> <分程序>
<程序⾸部>→PROGRAM <标识符>
<分程序>→[<常量说明>][<变量说明>]<语句部分>（注：[ ]中的项表⽰可选）
<常量说明>→CONST <常量定义>{，<常量定义>} （注： { }中的项表⽰可重复若⼲次）
<常量定义>→<标识符>=<⽆符号整数>
<⽆符号整数>→<数字>{，<数字>}
<变量说明>→VAR<标识符>{，<标识符>}
<标识符>→<字⺟>{<字⺟> | <数字>}
<语句部分>→<语句> | <复合语句>
<复合语句>→BEGIN <语句>{；<语句>} END
<语句>→<赋值语句> | <条件语句 >| <循环语句> | <复合语句> | <空语句>
<赋值语句>→<标识符>:=<表达式>
<表达式>→[+|-]项 | <表达式> <加法运算符> <项>
<项>→<因⼦> | <项><乘法运算符> <因⼦>
<因⼦>→<标识符> |<常量> | (<表达式>)
<加法运算符>→ + | -
<乘法运算符>→ * | /
<条件语句>→IF <条件> THEN <语句>
<循环语句>→WHILE <条件> DO <语句>
<条件>→<表达式> <关系运算符> <表达式>
<关系运算符>→ = | <> | < | <= | > | >=
<字⺟>→a | b …| x | y | z
<数字>→0 | 1 | … | 8| 9
c. PL/0 源程序⽰例：
PROGRAM add
VAR x,y;
BEGIN
x:=1;
y:=2;
WHILE x<5 DO x:=x+1;
IF y>0 THEN y:=y-1;
y:=y+x;
END
2. 编译⼯具使⽤
• Mission: 掌握现代⼯具进⾏编译器⼆次开发
• Task:
请选择compiler-compiler⼯具，⽣成PL/0语⾔的编译器
• Candidate Tools:
1. Flex/Bison
a. 词法分析器⽣成器 Flex（Lex的升级版）的官⽹ :https://github.com/westes/flex
b. 语法分析器⽣成器 Bison（Yacc的升级版）的官⽹:http://www.gnu.org/software/bison
2. ANTLR（ANother Tool for Language Recognition）
a. ⼀种包括词法分析、语法分析、中间代码⽣成、优化、⽬标代码⽣成的编译器⽣成⼯具
b. 官⽹：https://www.antlr.org
